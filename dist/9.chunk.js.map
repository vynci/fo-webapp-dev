{"version":3,"sources":["/Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dashboard/dashboard-routing.module.ts","/Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dashboard/dashboard.component.html","/Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dashboard/dashboard.component.scss","/Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dashboard/dashboard.component.ts","/Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dashboard/dashboard.module.ts"],"names":[],"mappings":"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","file":"9.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard.component';\n\nconst routes: Routes = [\n    { path: '', component: DashboardComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dashboard/dashboard-routing.module.ts","module.exports = \"<div>\\n    <div class=\\\"row control-header\\\"> \\n        <div class=\\\"col col-sm-4\\\"></div>\\n        <div class=\\\"col col-sm-4\\\">           \\n        </div>\\n        <div class=\\\"col col-sm-4\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col col-sm-6\\\">\\n                    <select class=\\\"form-control\\\" [ngModel]=\\\"selectedDashboard\\\" (ngModelChange)=\\\"onDashboardSelect($event)\\\" name=\\\"sel2\\\">\\n                        <option value=\\\"{{widget.sensorId}}\\\" *ngFor=\\\"let widget of widgets\\\">{{widget.name}}</option>\\n                    </select>                     \\n                </div>\\n                <div class=\\\"col col-sm-6\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"open(addWidgetContent, 0, null, 'add')\\\"><i class=\\\"fa fa-plus\\\"></i> Add Widget</button>\\n                </div>\\n            </div>            \\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-4\\\">\\n            <div class=\\\"component-container graph-height\\\">\\n                <div class=\\\"component-header label-green\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col col-sm-4\\\">Pitch: <strong>{{sensorWidget.pitchChart[0].data[0] || '0'}} °</strong></div>\\n                        <div class=\\\"col col-sm-3\\\">Max: <strong>{{sensorMaxAverage.pitch.max}}</strong></div>\\n                        <div class=\\\"col col-sm-3\\\">Ave: <strong>{{sensorMaxAverage.pitch.average}} °</strong></div>\\n                        <div class=\\\"col col-sm-2\\\" style=\\\"text-align:center;\\\">\\n                            <span class=\\\"component-setting\\\" (click)=\\\"open(editWidgetContent, 1, 'pitch', 'edit')\\\"><i class=\\\"fa fa-cog\\\"></i></span> \\n                        </div>\\n                    </div>\\n                </div>\\n                <canvas baseChart height=\\\"115\\\" [datasets]=\\\"sensorWidget.pitchChart\\\"  [labels]=\\\"graphSettings.pitch.yaxis\\\" [options]=\\\"graphSettings.pitch.lineChart\\\" [colors]=\\\"pitchChartColor\\\" [legend]=\\\"lineChartLegend\\\" [chartType]=\\\"lineChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n            </div>\\n            <div class=\\\"component-container graph-height\\\">\\n                <div class=\\\"component-header label-blue\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col col-sm-4\\\">Roll: <strong>{{sensorWidget.rollChart[0].data[0] || '0'}} °</strong></div>\\n                        <div class=\\\"col col-sm-3\\\">Max: <strong>{{sensorMaxAverage.roll.max}}</strong></div>\\n                        <div class=\\\"col col-sm-3\\\">Ave: <strong>{{sensorMaxAverage.roll.average}} °</strong></div>\\n                        <div class=\\\"col col-sm-2\\\" style=\\\"text-align:center;\\\">\\n                            <span class=\\\"component-setting\\\" (click)=\\\"open(editWidgetContent, 1, 'roll', 'edit')\\\"><i class=\\\"fa fa-cog\\\"></i></span> \\n                        </div>\\n                    </div>                    \\n                </div>\\n                <canvas baseChart height=\\\"115\\\" [datasets]=\\\"sensorWidget.rollChart\\\" [labels]=\\\"graphSettings.roll.yaxis\\\" [options]=\\\"graphSettings.roll.lineChart\\\" [colors]=\\\"rollChartColor\\\" [legend]=\\\"lineChartLegend\\\" [chartType]=\\\"lineChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\"></canvas>                \\n            </div>\\n            <div class=\\\"component-container graph-height\\\">\\n                <div class=\\\"component-header label-orange\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col col-sm-4\\\">Heading: <strong>{{sensorWidget.headingChart[0].data[0] || '0'}} °</strong></div>\\n                        <div class=\\\"col col-sm-3\\\">Max: <strong>{{sensorMaxAverage.heading.max}}</strong></div>\\n                        <div class=\\\"col col-sm-3\\\">Ave: <strong>{{sensorMaxAverage.heading.average}}</strong></div>\\n                        <div class=\\\"col col-sm-2\\\" style=\\\"text-align:center;\\\">\\n                            <span class=\\\"component-setting\\\" (click)=\\\"open(editWidgetContent, 1, 'heading', 'edit')\\\"><i class=\\\"fa fa-cog\\\"></i></span> \\n                        </div>\\n                    </div>                    \\n                </div>\\n                <canvas baseChart height=\\\"115\\\" [datasets]=\\\"sensorWidget.headingChart\\\" [labels]=\\\"graphSettings.heading.yaxis\\\" [options]=\\\"graphSettings.heading.lineChart\\\" [colors]=\\\"headingChartColor\\\" [legend]=\\\"lineChartLegend\\\" [chartType]=\\\"lineChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"col col-sm-4\\\">\\n            <div class=\\\"component-container graph-height\\\">\\n                <div class=\\\"component-header label-green\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col col-sm-4\\\">Pitch Accel: <strong>{{sensorWidget.pitchAccelerationChart[0].data[0] || '0'}} °/s<sup>2</sup></strong></div>\\n                        <div class=\\\"col col-sm-3\\\">Max: <strong>{{sensorMaxAverage.pitchAcceleration.max}}</strong></div>\\n                        <div class=\\\"col col-sm-3\\\">Ave: <strong>{{sensorMaxAverage.pitchAcceleration.average}}</strong></div>\\n                        <div class=\\\"col col-sm-2\\\" style=\\\"text-align:center;\\\">\\n                            <span class=\\\"component-setting\\\" (click)=\\\"open(editWidgetContent, 1, 'pitchAcceleration', 'edit')\\\"><i class=\\\"fa fa-cog\\\"></i></span> \\n                        </div>\\n                    </div>                    \\n                </div>\\n                <canvas baseChart height=\\\"115\\\" [datasets]=\\\"sensorWidget.pitchAccelerationChart\\\" [labels]=\\\"graphSettings.pitchAcceleration.yaxis\\\" [options]=\\\"graphSettings.pitchAcceleration.lineChart\\\" [colors]=\\\"pitchChartColor\\\" [legend]=\\\"lineChartLegend\\\" [chartType]=\\\"lineChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n            </div>\\n            <div class=\\\"component-container graph-height\\\">\\n                <div class=\\\"component-header label-blue\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col col-sm-4\\\">Roll Accel: <strong>{{sensorWidget.rollAccelerationChart[0].data[0] || '0'}} °/s<sup>2</sup></strong></div>\\n                        <div class=\\\"col col-sm-3\\\">Max: <strong>{{sensorMaxAverage.rollAcceleration.max}}</strong></div>\\n                        <div class=\\\"col col-sm-3\\\">Ave: <strong>{{sensorMaxAverage.rollAcceleration.average}}</strong></div>\\n                        <div class=\\\"col col-sm-2\\\" style=\\\"text-align:center;\\\">\\n                            <span class=\\\"component-setting\\\" (click)=\\\"open(editWidgetContent, 1, 'rollAcceleration', 'edit')\\\"><i class=\\\"fa fa-cog\\\"></i></span> \\n                        </div>\\n                    </div>                    \\n                </div>\\n                <canvas baseChart height=\\\"115\\\" [datasets]=\\\"sensorWidget.rollAccelerationChart\\\" [labels]=\\\"graphSettings.rollAcceleration.yaxis\\\" [options]=\\\"graphSettings.rollAcceleration.lineChart\\\" [colors]=\\\"rollChartColor\\\" [legend]=\\\"lineChartLegend\\\" [chartType]=\\\"lineChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\"></canvas>                \\n            </div>\\n            <div class=\\\"component-container graph-height\\\">\\n                <div class=\\\"component-header label-orange\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col col-sm-4\\\">Heading Accel: <strong>{{sensorWidget.headingAccelerationChart[0].data[0] || '0'}} °/s<sup>2</sup></strong></div>\\n                        <div class=\\\"col col-sm-3\\\">Max: <strong>{{sensorMaxAverage.headingAcceleration.max}}</strong></div>\\n                        <div class=\\\"col col-sm-3\\\">Ave: <strong>{{sensorMaxAverage.headingAcceleration.average}}</strong></div>\\n                        <div class=\\\"col col-sm-2\\\" style=\\\"text-align:center;\\\">\\n                            <span class=\\\"component-setting\\\" (click)=\\\"open(editWidgetContent, 1, 'headingAcceleration', 'edit')\\\"><i class=\\\"fa fa-cog\\\"></i></span> \\n                        </div>\\n                    </div>                    \\n                </div>\\n                <canvas baseChart height=\\\"115\\\" [datasets]=\\\"sensorWidget.headingAccelerationChart\\\" [labels]=\\\"graphSettings.headingAcceleration.yaxis\\\" [options]=\\\"graphSettings.headingAcceleration.lineChart\\\" [colors]=\\\"headingChartColor\\\" [legend]=\\\"lineChartLegend\\\" [chartType]=\\\"lineChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n            </div>        \\n        </div>\\n        <div class=\\\"col col-sm-4\\\">\\n            <div class=\\\"component-container non-graph-height\\\">\\n                <div class=\\\"component-header label-gray\\\">3D Model</div>\\n                <div class=\\\"component-console\\\">\\n                    <geometry-cube texture=\\\"/assets/textures/crate.gif\\\"\\n                    [size]=\\\"200\\\"\\n                    [rotationSpeedX]=\\\"sensorReadings.roll\\\"\\n                    [rotationSpeedY]=\\\"sensorReadings.heading\\\"\\n                    [rotationSpeedZ]=\\\"sensorReadings.pitch\\\"\\n                    [cameraZ]=\\\"400\\\"\\n                    [fieldOfView]=\\\"70\\\"\\n                    [nearClipping]=\\\"1\\\"\\n                    [farClipping]=\\\"1000\\\"></geometry-cube>                    \\n                </div>\\n            </div>\\n            <div class=\\\"component-container non-graph-height\\\">\\n                <div class=\\\"component-header label-gray\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col col-sm-3\\\"><strong>Console</strong> </div>                    \\n                        <div class=\\\"col col-sm-3\\\"><i class=\\\"fa fa-battery\\\"></i> : <strong>100%</strong></div>\\n                        <div class=\\\"col col-sm-3\\\"><i class=\\\"fa fa-exchange\\\"></i> : <strong>10 Hz</strong></div>\\n                        <div class=\\\"col col-sm-3\\\"><i class=\\\"fa fa-signal\\\"></i> : <strong>{{sensorReadings.rssi}} RSSI</strong></div>  \\n                    </div>                  \\n                </div>\\n                <div #console class=\\\"component-console console-setting\\\">\\n                    <div *ngFor=\\\"let item of consoleList\\\"><strong>{{item.time}}</strong> : <span [style.color]='item.color'>{{item.value}}</span></div>                                                          \\n                </div>    \\n            </div>            \\n        </div>\\n    </div>\\n    <div class=\\\"row\\\"></div>\\n    <div class=\\\"row\\\"></div>\\n</div>\\n\\n<ng-template #editWidgetContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\"><span style=\\\"text-transform:capitalize;\\\">{{widgetModalTitle}}</span>  Graph Settings</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <h5>Treshold Indicator Values</h5>\\n        <br>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col col-sm-6\\\">\\n                <form role=\\\"form\\\">\\n                    <fieldset class=\\\"form-group\\\">\\n                        <label>Minimum Angle</label>\\n                        <input type=\\\"number\\\" [(ngModel)]=\\\"currentMinMax.minimum\\\" name=\\\"rollMin\\\" max=\\\"0\\\" min=\\\"-180\\\" class=\\\"form-control\\\" placeholder=\\\"0\\\">\\n                    </fieldset>                           \\n                </form> \\n            </div>  \\n            <div class=\\\"col col-sm-6\\\">\\n                <form role=\\\"form\\\">\\n                    <fieldset class=\\\"form-group\\\">\\n                        <label>Maximum Angle</label>\\n                        <input type=\\\"number\\\" [(ngModel)]=\\\"currentMinMax.maximum\\\" name=\\\"rollMax\\\" max=\\\"180\\\" min=\\\"0\\\" class=\\\"form-control\\\" placeholder=\\\"0\\\">\\n                    </fieldset>                         \\n                </form> \\n            </div>  \\n        </div>\\n        <br>\\n        <h5>Timeline Interval</h5>\\n        <br>        \\n        <div>\\n            <select class=\\\"form-control\\\" [ngModel]=\\\"selectedInterval\\\" (ngModelChange)=\\\"onIntervalSelect($event)\\\" name=\\\"sel2\\\">\\n                <option [value]=\\\"1000\\\">1 Second</option>                    \\n                <option [value]=\\\"60000\\\">1 Minute</option>\\n                <option [value]=\\\"120000\\\">2 Minutes</option>\\n                <option [value]=\\\"180000\\\">3 Minutes</option>\\n                <option [value]=\\\"240000\\\">4 Minutes</option>\\n                <option [value]=\\\"300000\\\">5 Minutes</option>\\n            </select>             \\n        </div>                               \\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveGraphSetting(); c('Close click')\\\">Save</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Cancel</button>\\n    </div>\\n</ng-template>\\n\\n<ng-template #addWidgetContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add Sensor Widget</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <form role=\\\"form\\\">\\n            <fieldset class=\\\"form-group\\\">\\n                <label>ID</label>\\n                <input class=\\\"form-control\\\" placeholder=\\\"ex: 1234-5678-90\\\" [(ngModel)]=\\\"newWidget.sensorId\\\" name=\\\"sensorId\\\" >\\n            </fieldset>\\n            <fieldset class=\\\"form-group\\\">\\n                <label>Name</label>\\n                <input class=\\\"form-control\\\" placeholder=\\\"ex: Sensor A\\\" [(ngModel)]=\\\"newWidget.name\\\" name=\\\"name\\\" >\\n            </fieldset>                            \\n        </form>                                \\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createWidget(); c('Close click')\\\">Save</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Cancel</button>\\n    </div>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/layout/dashboard/dashboard.component.html\n// module chunks = 9","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".graph-height {\\n  height: 250px; }\\n\\n.non-graph-height {\\n  height: 385px; }\\n\\n.component-header {\\n  height: 30px;\\n  margin-bottom: 10px;\\n  color: white;\\n  text-align: left;\\n  padding-left: 10px;\\n  padding-top: 2px;\\n  border-bottom: 1px solid #444; }\\n\\n.component-container {\\n  border: 1px solid #444;\\n  margin-bottom: 20px; }\\n\\n.component-console {\\n  background: black;\\n  height: 92%; }\\n\\n.console-setting {\\n  color: #2ecc71;\\n  padding: 8px;\\n  overflow-y: scroll;\\n  font-size: 14px; }\\n\\n.component-indicators {\\n  margin-right: 10px; }\\n\\n.component-setting {\\n  color: white;\\n  cursor: pointer;\\n  font-weight: bold;\\n  font-size: 18px; }\\n\\n.label-blue {\\n  background: #3498db; }\\n\\n.label-green {\\n  background: #2ecc71; }\\n\\n.label-orange {\\n  background: #f0ad4e; }\\n\\n.label-gray {\\n  height: 8% !important;\\n  margin-bottom: 0px !important;\\n  background: gray; }\\n\\n.control-header {\\n  margin-bottom: 20px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dashboard/dashboard.component.scss\n// module id = ../../../../../src/app/layout/dashboard/dashboard.component.scss\n// module chunks = 9","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { HelperService } from '../../services/helper.service';\nimport { SensorStreamService } from '../../services/sensorStream.service';\nimport { WidgetModel } from '../../models/widget-model';\nimport { WidgetSettingService } from '../../services/widgetSetting.service';\nimport { WidgetService } from '../../services/widget.service';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss'],\n    animations: [routerTransition()],\n    providers: [HelperService, NgbModal, SensorStreamService, WidgetSettingService, WidgetService]\n})\nexport class DashboardComponent implements OnInit {\n    @ViewChild('console') private myScrollContainer: ElementRef;\n\n    constructor(\n        private _helperService: HelperService,\n        private modalService: NgbModal,\n        private _sensorStreamService: SensorStreamService,\n        private _widgetSettingService: WidgetSettingService,\n        private _widgetService: WidgetService,\n    ) { }\n\n    private connection;\n    private heartbeat;\n    private currentGraphSetting:string;\n    private heartStatus:string = 'init';\n\n    public widgets:any = [];\n\n    public newWidget:any = {\n        sensorId: '',\n        dashboardId: '0',\n        type: 'motion-sensor',\n        description: 'default'\n    }\n\n    public newWidgetSetting:any = {\n        widgetId: '',\n        rollMin: -90,\n        rollMax: 90,\n        pitchMin: -90,\n        pitchMax: 90,\n        isDegrees: true,\n    } \n\n    public consoleList:any = [];\n\n    public currentWidgetSetting:any = {\n        widgetId: '',\n        rollMin: -10,\n        rollMax: 10,\n        pitchMin: -20,\n        pitchMax: 20,\n        headingMin: -30,\n        headingMax: 80,\n        isDegrees: true\n    };\n\n    public currentMinMax:any = {\n        minimum : -30,\n        maximum : 30\n    }\n\n    public minMaxFlag:any = {\n        pitch : false,\n        roll : false,\n        heading : false\n    }\n\n    public sensorWidget:any = {\n        rollChart : [\n            {data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], fill:false}\n        ],\n        pitchChart : [\n            {data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], fill:false}\n        ],\n        headingChart : [\n            {data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], fill:false}\n        ],\n        pitchAccelerationChart : [\n            {data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], fill:false}\n        ],\n        rollAccelerationChart : [\n            {data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], fill:false}\n        ],\n        headingAccelerationChart : [\n            {data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], fill:false}\n        ]                                        \n    };\n\n    public sensorMaxAverage:any = {\n        roll : {\n            max : 0,\n            average : 0\n        },\n        pitch : {\n            max : 0,\n            average : 0\n        },\n        heading : {\n            max : 0,\n            average : 0\n        },\n        rollAcceleration : {\n            max : 0,\n            average : 0\n        },\n        pitchAcceleration : {\n            max : 0,\n            average : 0\n        },\n        headingAcceleration : {\n            max : 0,\n            average : 0\n        }                        \n    }\n\n    public sensorReadings = {\n        heading : 0,\n        pitch : 0,\n        roll : 0,\n        headingAcceleration : 0,\n        pitchAcceleration : 0,\n        rollAcceleration : 0,\n        rssi : 0\n    }\n\n    public closeResult: string;\n    public lineChartType: string = 'line';\n    public lineChartLegend: boolean = true;\n    public lineChartLabels: Array<any> = ['0', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n    public selectedInterval:any = 1000;\n    public selectedDashboard:string;\n\n    public widgetModalTitle:string;\n\n    public lineChartOptions: any = {\n        responsive: true,\n        animation: {\n            duration: 100\n        },\n        legend: {\n            display: false\n        },        \n        scales: {\n            yAxes: [{\n                ticks: {\n                    suggestedMin: -10,\n                    suggestedMax: 10\n                },\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Degrees'\n                }                \n            }],\n            xAxes: [{\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Time (ms)'\n                }                \n            }]\n        }        \n    };\n\n    public lineChartAccelerationOptions: any = {\n        responsive: true,\n        animation: {\n            duration: 100\n        },\n        legend: {\n            display: false\n        },        \n        scales: {\n            yAxes: [{\n                ticks: {\n                    suggestedMin: -180,\n                    suggestedMax: 180\n                },\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Degrees'\n                }                \n            }],\n            xAxes: [{\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Time (ms)'\n                }                \n            }]\n        }        \n    };\n    \n    public graphSettings: any = {\n        pitch : {\n            yaxis: this.lineChartLabels,\n            lineChart: this.lineChartOptions,\n            interval : 1000\n        },\n        roll : {\n            yaxis: this.lineChartLabels,\n            lineChart: this.lineChartOptions,\n            interval : 1000\n        },\n        heading : {\n            yaxis: this.lineChartLabels,\n            lineChart: this.lineChartOptions,\n            interval : 1000\n        },\n        pitchAcceleration : {\n            yaxis: this.lineChartLabels,\n            lineChart: this.lineChartAccelerationOptions,\n            interval : 1000\n        },\n        rollAcceleration : {\n            yaxis: this.lineChartLabels,\n            lineChart: this.lineChartAccelerationOptions,\n            interval : 1000\n        },\n        headingAcceleration : {\n            yaxis: this.lineChartLabels,\n            lineChart: this.lineChartAccelerationOptions,\n            interval : 1000\n        }\n    }\n\n    public pitchChartColor: Array<any> = [\n        { // green\n            backgroundColor: '#2ecc71',\n            borderColor: '#2ecc71',\n            pointBackgroundColor: 'transparent',\n            pointBorderColor: 'transparent',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        }\n    ];\n\n    public rollChartColor: Array<any> = [\n        { // blue\n            backgroundColor: '#3498db',\n            borderColor: '#3498db',\n            pointBackgroundColor: 'transparent',\n            pointBorderColor: 'transparent',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        }\n    ];   \n    \n    public headingChartColor: Array<any> = [\n        { // blue\n            backgroundColor: '#f0ad4e',\n            borderColor: '#f0ad4e',\n            pointBackgroundColor: 'transparent',\n            pointBorderColor: 'transparent',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        }\n    ];   \n    \n    public open(content, id, title:string, type:string) {\n        if(type === 'edit'){\n            this.widgetModalTitle = title;\n            this.currentGraphSetting = title;\n            this.selectedInterval = this.graphSettings[title].interval;\n            this.currentMinMax = {\n                minimum : this.currentWidgetSetting[title + 'Min'],\n                maximum : this.currentWidgetSetting[title + 'Max']\n            }\n        }\n\n        this.modalService.open(content).result.then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }    \n\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return  `with: ${reason}`;\n        }\n    }    \n\n    private generateYLabel(limit:number, isLabel:boolean):any{\n        var x = [];\n\n        for(var i=0;i < limit; i++){\n            if((i % 100) === 0)\n            {\n                if(isLabel){\n                    x.push(i);    \n                }else{\n                    x.push(null);\n                }\n            }\n        }\n        return x;\n    }    \n\n    public saveGraphSetting() {\n        this.graphSettings[this.currentGraphSetting].interval = this.selectedInterval\n        this.graphSettings[this.currentGraphSetting].yaxis = this.generateYLabel(this.selectedInterval, true);\n\n        this.currentWidgetSetting[this.currentGraphSetting + 'Min'] = this.currentMinMax.minimum;\n        this.currentWidgetSetting[this.currentGraphSetting + 'Max'] = this.currentMinMax.maximum;\n\n        this.connection.unsubscribe();\n        this.iniateWebSockets(this.selectedDashboard);\n\n        // this._widgetSettingService.update(this.currentWidgetSetting)\n        // .subscribe(data => {\n        //     this.connection.unsubscribe();\n        //     this.iniateWebSockets();\n        // });    \n    }\n\n    public onIntervalSelect(newValue) {\n        this.selectedInterval = newValue;\n    }       \n\n    public onDashboardSelect(newValue) {\n        this.destroyWebsockets();\n\n        this.selectedDashboard = newValue;\n        this.setupHeartBeat(newValue);\n        this.iniateWebSockets(newValue);\n        this.appendToConsole(newValue + ' Dashboard Initialized', '');        \n    }    \n\n    private calculate(set:any): any{\n        let values = set.map(Math.abs);\n        let sum = values.reduce((previous, current) => current += previous);\n        let average = sum / values.length;\n        let maximum = Math.max.apply(null, values);\n\n        return {\n            max : maximum,\n            average : average.toFixed(2)\n        };\n    }\n\n    private processMaxAverage() {\n        this.sensorMaxAverage = {\n            roll : this.calculate(this.sensorWidget.rollChart[0].data),\n            pitch : this.calculate(this.sensorWidget.pitchChart[0].data),\n            heading : this.calculate(this.sensorWidget.headingChart[0].data),\n            rollAcceleration : this.calculate(this.sensorWidget.rollAccelerationChart[0].data),\n            pitchAcceleration : this.calculate(this.sensorWidget.pitchAccelerationChart[0].data),\n            headingAcceleration : this.calculate(this.sensorWidget.headingAccelerationChart[0].data)                        \n        }\n    }\n\n    private getDateTime(date: Date) {\n        return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\n    }\n\n    private appendToConsole(message:any, color:any) {\n        this.consoleList.push({\n            time : this.getDateTime(new Date()),\n            value : message.toString(),\n            color : color\n        });\n        this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;                \n    }\n\n    private checkThreshold(sensorReadings) {\n        if(this.sensorReadings['roll'] > this.currentWidgetSetting.rollMax && !this.minMaxFlag['roll']) {\n            this.minMaxFlag['roll'] = true;\n            this.appendToConsole('Roll above maximum threshold.', 'red');\n        } else if(this.sensorReadings['roll'] < this.currentWidgetSetting.rollMin && !this.minMaxFlag['roll']){\n            this.minMaxFlag['roll'] = true;\n            this.appendToConsole('Roll below minimum threshold.', 'red');\n        } else if (this.sensorReadings['roll'] > this.currentWidgetSetting.rollMin && this.sensorReadings['roll'] < this.currentWidgetSetting.rollMax){\n            if (this.minMaxFlag['roll']) {\n                this.minMaxFlag['roll'] = false;\n                this.appendToConsole('Roll angle back to normal.', '');\n            }   \n        }\n\n        if(this.sensorReadings['pitch'] > this.currentWidgetSetting.pitchMax && !this.minMaxFlag['pitch']) {\n            this.minMaxFlag['pitch'] = true;\n            this.appendToConsole('Pitch above maximum threshold.', 'red');\n        } else if(this.sensorReadings['pitch'] < this.currentWidgetSetting.pitchMin && !this.minMaxFlag['pitch']){\n            this.minMaxFlag['pitch'] = true;\n            this.appendToConsole('Pitch below minimum threshold.', 'red');\n        } else if (this.sensorReadings['pitch'] > this.currentWidgetSetting.pitchMin && this.sensorReadings['pitch'] < this.currentWidgetSetting.pitchMax){\n            if (this.minMaxFlag['pitch']) {\n                this.minMaxFlag['pitch'] = false;\n                this.appendToConsole('Pitch angle back to normal.', '');\n            }   \n        }\n\n        if(this.sensorReadings['heading'] > this.currentWidgetSetting.headingMax && !this.minMaxFlag['heading']) {\n            this.minMaxFlag['heading'] = true;\n            this.appendToConsole('Heading above maximum threshold.', 'red');\n        } else if(this.sensorReadings['heading'] < this.currentWidgetSetting.headingMin && !this.minMaxFlag['heading']){\n            this.minMaxFlag['heading'] = true;\n            this.appendToConsole('Heading below minimum threshold.', 'red');\n        } else if (this.sensorReadings['heading'] > this.currentWidgetSetting.headingMin && this.sensorReadings['heading'] < this.currentWidgetSetting.headingMax){\n            if (this.minMaxFlag['heading']) {\n                this.minMaxFlag['heading'] = false;\n                this.appendToConsole('Heading angle back to normal.', '');\n            }   \n        }\n    }\n\n    private iniateWebSockets(id:string){\n        var pitchTmpData2 = this.generateYLabel(this.graphSettings.pitch.interval, false);\n        var rollTmpData2 = this.generateYLabel(this.graphSettings.roll.interval, false);\n        var headingTmpData2 = this.generateYLabel(this.graphSettings.heading.interval, false);\n\n        var pitchAccelerationTmpData2 = this.generateYLabel(this.graphSettings.pitchAcceleration.interval, false);;\n        var rollAccelerationTmpData2 = this.generateYLabel(this.graphSettings.rollAcceleration.interval, false);;\n        var headingAccelerationTmpData2 = this.generateYLabel(this.graphSettings.headingAcceleration.interval, false);;        \n\n        this.connection = this._sensorStreamService.getMessages(id).subscribe(message => {\n            var tmp = message.toString();\n            var buffer = tmp.split(',');\n            var sensorId = buffer[0].toString();\n\n            this.sensorReadings['roll'] = parseFloat(buffer[3]) || this.sensorReadings['roll'];\n            this.sensorReadings['pitch'] = parseFloat(buffer[2]) || this.sensorReadings['pitch'];\n            this.sensorReadings['heading'] = parseFloat(buffer[1]) || this.sensorReadings['heading'];\n            \n            this.sensorReadings['rollAcceleration'] = parseFloat(buffer[6]);\n            this.sensorReadings['pitchAcceleration'] = parseFloat(buffer[5]);\n            this.sensorReadings['headingAcceleration'] = parseFloat(buffer[4]);   \n            \n            this.sensorReadings['rssi'] = parseFloat(buffer[7]);\n\n            this.checkThreshold(this.sensorReadings);\n\n            pitchTmpData2.unshift(this.sensorReadings['pitch']);\n            pitchTmpData2.pop();\n\n            rollTmpData2.unshift(this.sensorReadings['roll']);\n            rollTmpData2.pop();\n\n            headingTmpData2.unshift(this.sensorReadings['heading']);\n            headingTmpData2.pop();\n\n            pitchAccelerationTmpData2.unshift(this.sensorReadings['pitchAcceleration']);\n            pitchAccelerationTmpData2.pop();\n\n            rollAccelerationTmpData2.unshift(this.sensorReadings['rollAcceleration']);\n            rollAccelerationTmpData2.pop();            \n\n            headingAccelerationTmpData2.unshift(this.sensorReadings['headingAcceleration']);\n            headingAccelerationTmpData2.pop();            \n\n            var cloneData = JSON.parse(JSON.stringify(this.sensorWidget.pitchChart));\n            cloneData[0].data = pitchTmpData2;\n            this.sensorWidget.pitchChart = cloneData;\n\n            cloneData = JSON.parse(JSON.stringify(this.sensorWidget.rollChart));\n            cloneData[0].data = rollTmpData2;\n            this.sensorWidget.rollChart = cloneData;\n\n            cloneData = JSON.parse(JSON.stringify(this.sensorWidget.headingChart));\n            cloneData[0].data = headingTmpData2;\n            this.sensorWidget.headingChart = cloneData;            \n\n            cloneData = JSON.parse(JSON.stringify(this.sensorWidget.pitchAccelerationChart));\n            cloneData[0].data = pitchAccelerationTmpData2;\n            this.sensorWidget.pitchAccelerationChart = cloneData;             \n\n            cloneData = JSON.parse(JSON.stringify(this.sensorWidget.rollAccelerationChart));\n            cloneData[0].data = rollAccelerationTmpData2;\n            this.sensorWidget.rollAccelerationChart = cloneData;            \n\n            cloneData = JSON.parse(JSON.stringify(this.sensorWidget.headingAccelerationChart));\n            cloneData[0].data = headingAccelerationTmpData2;\n            this.sensorWidget.headingAccelerationChart = cloneData;              \n\n            this.processMaxAverage();\n        });\n    }\n\n    private setupHeartBeat(id:string){    \n        this.heartbeat = this._sensorStreamService.heartBeat(id).subscribe(message => {\n            if(message !== 'healthy') {\n                if(this.heartStatus === 'init' || this.heartStatus === 'healthy') {\n                    this.appendToConsole('No incoming data (disconnected or out of range).', 'red');\n                    this.heartStatus = 'disconnected';                    \n                }\n            } else {\n                if(this.heartStatus === 'init' || this.heartStatus === 'disconnected') {\n                    this.appendToConsole('Datagram healthy.', '');\n                    this.heartStatus = 'healthy';\n                }\n            }\n        });\n    }\n\n    public createWidget():void{\n\t\tthis._widgetService.create(this.newWidget)\n\t\t.subscribe(data => {\n            this.newWidgetSetting.widgetId = data.data._id;\n            this._widgetSettingService.create(this.newWidgetSetting)\n            .subscribe(data => {\n                this.destroyWebsockets();\n                this.fetchWidgets();\n                this.clearAddSensorWidgetForm()\n            });            \n\t\t});          \n    }\n\n    private clearAddSensorWidgetForm():void{\n        this.newWidget =  {\n            sensorId: '',\n            dashboardId: '0',\n            type: 'motion-sensor',\n            description: 'default'\n        }        \n    }    \n\n\tprivate fetchWidgets():void{\n        this._widgetService.getAll()\n        .subscribe(data => {\n            let widgets = data.data;\n            let output = [];\n            var tmp = {};\n\n            this.widgets = widgets;\n            this.selectedDashboard = widgets[0].sensorId;\n    \n            this.setupHeartBeat(widgets[0].sensorId);\n            this.iniateWebSockets(widgets[0].sensorId);\n            this.appendToConsole('Dashboard(' + this.selectedDashboard  + ') Initialized', '');            \n\n            console.log(data);\n        });\n    }\n    \n    private destroyWebsockets() {\n        if(this.connection){\n            this.connection.unsubscribe();\n        }        \n\n        if(this.heartbeat) {\n            this.heartbeat.unsubscribe();\n        }        \n    }\n\n    ngOnInit() {\n        this.fetchWidgets();\n    }\n\n\tngOnDestroy() {\n        this.destroyWebsockets();\n\t}    \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dashboard/dashboard.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChartsModule as Ng2Charts } from 'ng2-charts';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { PageHeaderModule } from './../../shared';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard.component';\nimport { ThreeModelComponent } from '../3DModel/3DModel.component';\n\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        NgbModule.forRoot(),\n        FormsModule,\n        Ng2Charts,\n        DashboardRoutingModule,\n        PageHeaderModule\n    ],\n    declarations: [DashboardComponent, ThreeModelComponent]\n})\nexport class DashboardModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dashboard/dashboard.module.ts"],"sourceRoot":"webpack:///"}