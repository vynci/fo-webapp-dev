{"version":3,"sources":["/Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dash/dash-routing.module.ts","/Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dash/dash.component.html","/Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dash/dash.component.scss","/Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dash/dash.component.ts","/Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dash/dash.module.ts","/Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dash/sensorStream.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAyC;AACc;AAEN;AAEjD,IAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sEAAa,EAAE;CACzC,CAAC;AAMF,IAAa,iBAAiB;IAA9B;IAAiC,CAAC;IAAD,wBAAC;AAAD,CAAC;AAArB,iBAAiB;IAJ7B,8EAAQ,CAAC;QACN,OAAO,EAAE,CAAC,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,qEAAY,CAAC;KAC1B,CAAC;GACW,iBAAiB,CAAI;AAAJ;;;;;;;;ACb9B,mIAAmI,2GAA2G,4tCAA4tC,8CAA8C,yaAAya,aAAa,IAAI,iBAAiB,wMAAwM,4CAA4C,qBAAqB,2LAA2L,wmCAAwmC,oCAAoC,uNAAuN,iFAAiF,20BAA20B,qCAAqC,uNAAuN,mFAAmF,62BAA62B,uCAAuC,uNAAuN,uFAAuF,+tBAA+tB,ukCAAukC,0wBAA0wB,2dAA2d,83DAA83D,+HAA+H,oXAAoX,gRAAgR,6dAA6d,0RAA0R,0K;;;;;;;ACA1hZ;AACA;;;AAGA;AACA,gDAAiD,sBAAsB,wBAAwB,EAAE,kBAAkB,uBAAuB,EAAE;;AAE5I;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;;;ACXkD;AACS;AACgB;AACd;AACC;AACA;AACc;AAY5E,IAAa,aAAa;IAMtB,uBACY,YAAsB,EACtB,oBAAyC,EACzC,cAA6B,EAC7B,cAA6B,EAC7B,qBAA2C;QAJ3C,iBAAY,GAAZ,YAAY,CAAU;QACtB,yBAAoB,GAApB,oBAAoB,CAAqB;QACzC,mBAAc,GAAd,cAAc,CAAe;QAC7B,mBAAc,GAAd,cAAc,CAAe;QAC7B,0BAAqB,GAArB,qBAAqB,CAAsB;QAThD,aAAQ,GAAG,EAAE,CAAC;QAYb,iBAAY,GAAiB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACnD,gBAAW,GAAiB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAClD,mBAAc,GAAiB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAQtD,2BAAsB,GAAU,KAAK,CAAC;QACtC,qBAAgB,GAAO,IAAI,CAAC,sBAAsB,CAAC;QAEnD,yBAAoB,GAAO;YAC9B,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,CAAC,EAAE;YACZ,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,CAAC,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,IAAI;SAClB,CAAC;QACK,cAAS,GAAO;YACnB,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,GAAG;YAChB,IAAI,EAAE,eAAe;YACrB,WAAW,EAAE,SAAS;SACzB;QAEM,qBAAgB,GAAO;YAC1B,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,CAAC,EAAE;YACZ,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,CAAC,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,IAAI;SAClB;QAEM,kBAAa,GAAsB,EAAE,CAAC;QAErC,oBAAe,GAAO,EAAE,CAAC;QAE1B,oBAAe,GAAe,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAGnG,qBAAgB,GAAQ;YAC3B,UAAU,EAAE,IAAI;YAChB,SAAS,EAAE;gBACP,QAAQ,EAAE,GAAG;aAChB;YACD,MAAM,EAAE;gBACJ,OAAO,EAAE,KAAK;aACjB;YACD,MAAM,EAAE;gBACJ,KAAK,EAAE,CAAC;wBACJ,KAAK,EAAE;4BACH,YAAY,EAAE,CAAC,EAAE;4BACjB,YAAY,EAAE,EAAE;yBACnB;wBACD,UAAU,EAAE;4BACR,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,SAAS;yBACzB;qBACJ,CAAC;gBACF,KAAK,EAAE,CAAC;wBACJ,UAAU,EAAE;4BACR,OAAO,EAAE,IAAI;4BACb,WAAW,EAAE,WAAW;yBAC3B;qBACJ,CAAC;aACL;SACJ,CAAC;QAEK,oBAAe,GAAe;YACjC;gBACI,eAAe,EAAE,SAAS;gBAC1B,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,aAAa;gBACnC,gBAAgB,EAAE,aAAa;gBAC/B,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,uBAAuB;aACjD;SACJ,CAAC;QAEK,mBAAc,GAAe;YAChC;gBACI,eAAe,EAAE,SAAS;gBAC1B,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,aAAa;gBACnC,gBAAgB,EAAE,aAAa;gBAC/B,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,uBAAuB;aACjD;SACJ,CAAC;QAEK,sBAAiB,GAAe;YACnC;gBACI,eAAe,EAAE,SAAS;gBAC1B,WAAW,EAAE,SAAS;gBACtB,oBAAoB,EAAE,aAAa;gBACnC,gBAAgB,EAAE,aAAa;gBAC/B,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,uBAAuB;aACjD;SACJ,CAAC;QAEK,oBAAe,GAAY,IAAI,CAAC;QAChC,kBAAa,GAAW,MAAM,CAAC;IA5GpC,CAAC;IAgHI,4BAAI,GAAX,UAAY,OAAO,EAAE,EAAE;QAAvB,iBAcC;QAbG,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAE1B,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,EAAE,CAAC;aAC3C,SAAS,CAAC,cAAI;YACX,KAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YAC5C,KAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YAC/C,KAAI,CAAC,WAAW,GAAG,kBAAgB,MAAQ,CAAC;QAChD,CAAC,EAAE,UAAC,MAAM;YACN,KAAI,CAAC,WAAW,GAAG,eAAa,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAG,CAAC;QACpE,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,sCAAc,GAAtB,UAAuB,KAAY,EAAE,OAAe;QAChD,IAAI,CAAC,GAAG,EAAE,CAAC;QAEX,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAC,CAAC;YACxB,EAAE,EAAC,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CACnB,CAAC;gBACG,EAAE,EAAC,OAAO,CAAC,EAAC;oBACR,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC;gBAAA,IAAI,EAAC;oBACF,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACd,CAAC;YACL,CAAC;QACL,CAAC;QACD,MAAM,CAAC,CAAC,CAAC;IACb,CAAC;IAEO,wCAAgB,GAAxB,UAAyB,MAAW;QAChC,EAAE,CAAC,CAAC,MAAM,KAAK,uFAAmB,CAAC,GAAG,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,iBAAiB,CAAC;QAC7B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,uFAAmB,CAAC,cAAc,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,2BAA2B,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAE,WAAS,MAAQ,CAAC;QAC9B,CAAC;IACL,CAAC;IAEO,wCAAgB,GAAxB,UAAyB,GAAW;QAChC,IAAI,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;QACnC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAEvC,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEI,oCAAY,GAApB;QAAA,iBAuCI;QAtCG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;aAC3B,SAAS,CAAC,cAAI;YACX,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;YACxB,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,IAAI,GAAG,GAAG,EAAE,CAAC;YAEb,OAAO,CAAC,OAAO,CAAC,UAAC,MAAM,EAAE,GAAG;gBACxB,KAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC;qBACnD,SAAS,CAAC,uBAAa;oBACpB,MAAM,CAAC,UAAU,GAAG;wBAChB,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAC,KAAK,EAAC;qBAC5F,CAAC;oBACF,MAAM,CAAC,SAAS,GAAG;wBACf,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC,KAAK,EAAC;qBAC3F,CAAC;oBACF,MAAM,CAAC,YAAY,GAAG;wBAClB,EAAE,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC,KAAK,EAAC;qBAC3F,CAAC;oBAEF,MAAM,CAAC,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC;oBAC9C,MAAM,CAAC,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC;oBAC9C,MAAM,CAAC,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;oBAC5C,MAAM,CAAC,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;oBAE5C,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAEpB,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC;oBAE3B,EAAE,EAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAC;wBAC7B,KAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC;wBACjC,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC;wBAC5B,KAAI,CAAC,gBAAgB,EAAE,CAAC;oBAC5B,CAAC;oBAAA,CAAC;gBACN,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QAGP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,wCAAgB,GAAvB,UAAwB,QAAQ;QAC5B,IAAI,CAAC,sBAAsB,GAAG,QAAQ,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAC9B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;IAClF,CAAC;IAEM,oCAAY,GAAnB;QAAA,iBAUC;QATH,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;aACzC,SAAS,CAAC,cAAI;YACL,KAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YAC/C,KAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,KAAI,CAAC,gBAAgB,CAAC;iBACvD,SAAS,CAAC,cAAI;gBACX,KAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,KAAI,CAAC,wBAAwB,EAAE;YACnC,CAAC,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;IACD,CAAC;IAEM,0CAAkB,GAAzB;QAAA,iBAKC;QAJG,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,KAAK,CAAC;aAC9C,SAAS,CAAC,cAAI;YACX,KAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,2CAAmB,GAA1B;QAAA,iBAKC;QAJG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC;aAC3D,SAAS,CAAC,cAAI;YACX,KAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,oCAAY,GAAnB;QAAA,iBAYC;QAXG,IAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC;QACpC,IAAI,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC;QAExD,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC;aACnC,SAAS,CAAC,cAAI;YACL,KAAI,CAAC,YAAY,EAAE,CAAC;YACpB,KAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,eAAe,CAAC;iBACjD,SAAS,CAAC,cAAI;gBACX,KAAI,CAAC,YAAY,EAAE,CAAC;YACxB,CAAC,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;IACD,CAAC;IAEM,qCAAa,GAApB,UAAqB,IAAI;QACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACpD,CAAC;IAEO,gDAAwB,GAAhC;QACI,IAAI,CAAC,SAAS,GAAI;YACd,QAAQ,EAAE,EAAE;YACZ,WAAW,EAAE,GAAG;YAChB,IAAI,EAAE,eAAe;YACrB,WAAW,EAAE,SAAS;SACzB;IACL,CAAC;IAEO,wCAAgB,GAAxB;QAAA,iBA4CC;QA3CG,EAAE,EAAC,IAAI,CAAC,UAAU,CAAC,EAAC;YAChB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAClC,CAAC;QAED,IAAI,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;QAC5E,IAAI,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;QAC3E,IAAI,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;QAE9E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,iBAAO;YACvE,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;YAC7B,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YAEpC,IAAI,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAEpC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC7B,aAAa,CAAC,GAAG,EAAE,CAAC;YAEpB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC3B,YAAY,CAAC,GAAG,EAAE,CAAC;YAEnB,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACjC,eAAe,CAAC,GAAG,EAAE,CAAC;YAEtB,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,GAAG,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YAElG,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACjH,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,aAAa,CAAC;YACnC,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,GAAG,UAAU,CAAC;YAEjF,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAC/G,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,YAAY,CAAC;YACjC,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC;YAE/E,IAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACvH,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,eAAe,CAAC;YACvC,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,GAAG,YAAY,CAAC;QACzF,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,6CAAqB,GAA5B,UAA6B,KAAS,EAAE,OAAW;QAC/C,IAAI,MAAM,CAAC;QAEX,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,GAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC1C,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAE1B,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEO,wCAAgB,GAAxB,UAAyB,OAAW;QAChC,IAAI,MAAM,CAAC;QACX,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,UAAU,GAAG,EAAE,CAAC;QAEpB,EAAE,EAAC,OAAO,IAAI,UAAU,CAAC,EAAC;YACtB,MAAM,GAAG,CAAE,CAAC,OAAO,GAAG,UAAU,CAAC,GAAG,CAAE,UAAU,GAAG,UAAU,CAAC,CAAE,GAAG,GAAG,CAAC;YACvE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAChC,CAAC;QAAA,IAAI,EAAC;YACF,MAAM,GAAG,GAAG,CAAC;QACjB,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEO,0CAAkB,GAA1B;QACI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACnE,EAAE,EAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAC;YACtB,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAChE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACvE,CAAC;IACL,CAAC;IAEM,iCAAS,GAAhB,UAAiB,IAAQ;QACrB,IAAI,MAAM,GAAG,CAAC,CAAC;QAEf,EAAE,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC;YAChB,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7B,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAEM,uCAAe,GAAtB,UAAuB,IAAQ;QAC3B,IAAI,KAAK,CAAC;QAEV,EAAE,EAAC,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,GAAG,CAAC,EAAC;YACzB,KAAK,GAAG,OAAO,CAAC;QACpB,CAAC;QAAA,IAAI,CAAC,EAAE,EAAC,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,EAAE,CAAC,EAAC;YAC9B,KAAK,GAAG,QAAQ,CAAC;QACrB,CAAC;QAAA,IAAI,EAAC;YACF,KAAK,GAAG,KAAK,CAAC;QAClB,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAEM,2CAAmB,GAA1B,UAA2B,IAAQ;QAC/B,IAAI,KAAK,GAAG,iBAAiB,CAAC;QAE9B,EAAE,EAAC,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,GAAG,CAAC,EAAC;YACzB,KAAK,GAAG,iBAAiB,CAAC;QAC9B,CAAC;QAAA,IAAI,CAAC,EAAE,EAAC,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,EAAE,CAAC,EAAC;YAC9B,KAAK,GAAG,iBAAiB,CAAC;QAC9B,CAAC;QAAA,IAAI,CAAC,EAAE,EAAC,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,EAAE,CAAC,EAAC;YAC9B,KAAK,GAAG,iBAAiB,CAAC;QAC9B,CAAC;QAAA,IAAI,CAAC,EAAE,EAAC,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,EAAC;YAC7B,KAAK,GAAG,iBAAiB,CAAC;QAC9B,CAAC;QAAA,IAAI,EAAC;YACF,KAAK,GAAG,iBAAiB,CAAC;QAC9B,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAEM,gCAAQ,GAAf,UAAgB,IAAQ,EAAE,IAAW;QACjC,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,YAAY,GAAG,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,SAAS,GAAG;YACZ,QAAQ,EAAG,IAAI,CAAC,QAAQ;YACxB,QAAQ,EAAG,IAAI,CAAC,QAAQ;YACxB,OAAO,EAAG,IAAI,CAAC,OAAO;YACtB,OAAO,EAAG,IAAI,CAAC,OAAO;SACzB;QAED,EAAE,EAAC,YAAY,IAAI,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,YAAY,IAAI,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,EAAC;YACnF,KAAK,GAAG,KAAK,CAAC;QAClB,CAAC;QAAA,IAAI,CAAC,EAAE,EAAC,YAAY,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,YAAY,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,EAAC;YAC/J,KAAK,GAAG,QAAQ,CAAC;QACrB,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAEO,gCAAQ,GAAhB;QACI,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACtB,IAAI,QAAQ,CAAC;QACb,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC3B,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3B,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAEvF,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEtB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC;aACpC,SAAS,CAAC,cAAI;YACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gCAAQ,GAAR;QACI,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;IAClF,CAAC;IAEJ,mCAAW,GAAX;QACC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YAC1B,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC/B,CAAC;QAED,EAAE,EAAC,IAAI,CAAC,UAAU,CAAC,EAAC;YAChB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAClC,CAAC;IACR,CAAC;IAEF,oBAAC;AAAD,CAAC;AA/bY,aAAa;IARzB,+EAAS,CAAC;QACP,QAAQ,EAAE,YAAY;QACtB,uFAAoC;QACpC,uFAAoC;QACpC,UAAU,EAAE,CAAC,mGAAgB,EAAE,CAAC;QAChC,SAAS,EAAE,CAAC,kFAAmB,EAAE,+EAAa,EAAE,6FAAoB,EAAE,+EAAa,CAAC;KACvF,CAAC;yDAS4B,4EAAQ,oBAAR,4EAAQ,sDACA,kFAAmB,oBAAnB,kFAAmB,sDACzB,+EAAa,oBAAb,+EAAa,sDACb,+EAAa,oBAAb,+EAAa,sDACN,6FAAoB,oBAApB,6FAAoB;GAX9C,aAAa,CA+bzB;AA/byB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBe;AACM;AACQ;AACA;AAEG;AACT;AACD;AACmB;AAEtB;AAa7C,IAAa,UAAU;IAAvB;IAA0B,CAAC;IAAD,iBAAC;AAAD,CAAC;AAAd,UAAU;IAXtB,8EAAQ,CAAC;QACN,OAAO,EAAE;YACL,qEAAY;YACZ,wDAAS;YACT,6EAAS,CAAC,OAAO,EAAE;YACnB,+EAAiB;YACjB,iEAAgB;YAChB,mEAAW;SACd;QACD,YAAY,EAAE,CAAC,sEAAa,EAAE,uFAAmB,CAAC;KACrD,CAAC;GACW,UAAU,CAAI;AAAJ;;;;;;;;;;;;;;ACtBsB;AACN;AAEvC;IAAA;QACU,QAAG,GAAG,wBAAwB,CAAC;IAoBzC,CAAC;IAjBC,yCAAW,GAAX,UAAY,OAAO;QACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,yCAAW,GAAX;QAAA,iBAWC;QAVC,IAAI,UAAU,GAAG,IAAI,2DAAU,CAAC,kBAAQ;YACtC,KAAI,CAAC,MAAM,GAAG,8CAAE,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC;YAC3B,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAC,IAAI;gBACtC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;YACH,MAAM,CAAC;gBACL,KAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;YAC3B,CAAC,CAAC;QACJ,CAAC,CAAC;QACF,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;IACH,0BAAC;AAAD,CAAC","file":"2.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashComponent } from './dash.component';\n\nconst routes: Routes = [\n    { path: '', component: DashComponent }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class DashRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dash/dash-routing.module.ts","module.exports = \"<div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-sm-3 add-widget-container\\\" style=\\\"text-align:left;\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col col-sm-2\\\" style=\\\"padding-top: 5px;\\\">\\n                    <span>Period:</span>\\n                </div>\\n                <div class=\\\"col col-sm-10\\\">\\n                    <select class=\\\"form-control\\\" [ngModel]=\\\"selectedInterval\\\" (ngModelChange)=\\\"onIntervalSelect($event)\\\" name=\\\"sel2\\\">\\n                        <option [value]=\\\"1000\\\">1 Second</option>                    \\n                        <option [value]=\\\"60000\\\">1 Minute</option>\\n                        <option [value]=\\\"120000\\\">2 Minutes</option>\\n                        <option [value]=\\\"180000\\\">3 Minutes</option>\\n                        <option [value]=\\\"240000\\\">4 Minutes</option>\\n                        <option [value]=\\\"300000\\\">5 Minutes</option>\\n                    </select> \\n                </div>                \\n            </div>\\n        </div>        \\n        <div class=\\\"col col-sm-3 add-widget-container\\\"></div>\\n        <div class=\\\"col col-sm-6 add-widget-container\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"open(content)\\\"><i class=\\\"fa fa-plus\\\"></i> Add Widget</button>            \\n        </div>\\n    </div>\\n    <div *ngIf=\\\"sensorWidgets.length == 0\\\" class=\\\"row\\\">\\n        <div class=\\\"col col-sm-12\\\" style=\\\"padding-top:150px;\\\">\\n            <p style=\\\"text-align:center;\\\">You currently have no widgets. Click <b>Add Widget</b> button to create one.</p>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngFor=\\\"let sensor of sensorWidgets\\\">\\n        <div class=\\\"col col-sm-12\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col col-sm-6\\\">\\n                            {{sensor.name}} ({{sensor.sensorId}}) \\n                            <span>\\n                                <i [ngClass]=\\\"getBatteryIndicator(sensor.battery)\\\" [style.color]=\\\"getBatteryStyle(sensor.battery)\\\" style=\\\"margin-left:10px;\\\"> \\n                                    {{sensor.battery || 0}}%\\n                                </i>\\n                            </span>\\n                        </div>\\n                        <div class=\\\"col col-sm-6\\\" style=\\\"text-align:right;\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-warning\\\" (click)=\\\"open(rebootWidgetContent, sensor._id)\\\"><i class=\\\"fa fa-power-off\\\"></i></button>                            \\n                            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-info\\\" (click)=\\\"open(editWidgetContent, sensor._id)\\\"><i class=\\\"fa fa-cog\\\"></i></button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-danger\\\" (click)=\\\"open(deleteWidgetContent, sensor._id)\\\"><i class=\\\"fa fa-trash\\\"></i></button>\\n                        </div>\\n                    </div>                    \\n                </div>\\n                <div class=\\\"card-block\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col col-sm-6\\\">\\n                            <div class=\\\"label-graph\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col col-sm-6\\\" style=\\\"text-align:right\\\">\\n                                        <b>Roll</b>: <span [style.color]=\\\"getStyle(sensor, 'roll')\\\">{{sensor.rollChart[0].data[0] || '0'}}°</span>\\n                                    </div>\\n                                    <div class=\\\"col col-sm-6\\\" style=\\\"text-align:left\\\">\\n                                        <b>Acceleration</b>: <span>{{calculateAcceleration(sensor.rollChart[0].data[0], sensor.rollChart[0].data[9])}}°/s<sup>2</sup></span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <canvas baseChart height=\\\"90\\\" [datasets]=\\\"sensor.rollChart\\\" [labels]=\\\"lineChartLabels\\\" [options]=\\\"lineChartOptions\\\" [colors]=\\\"rollChartColor\\\" [legend]=\\\"lineChartLegend\\\" [chartType]=\\\"lineChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n                            </canvas>\\n                            <br>\\n                            <div class=\\\"label-graph\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col col-sm-6\\\" style=\\\"text-align:right\\\">\\n                                        <b>Pitch</b>: <span [style.color]=\\\"getStyle(sensor, 'pitch')\\\">{{sensor.pitchChart[0].data[0] || '0'}}°</span>\\n                                    </div>\\n                                    <div class=\\\"col col-sm-6\\\" style=\\\"text-align:left\\\">\\n                                        <b>Acceleration</b>: <span>{{calculateAcceleration(sensor.pitchChart[0].data[0], sensor.pitchChart[0].data[9])}}°/s<sup>2</sup></span>\\n                                    </div>\\n                                </div>                            \\n                            </div>\\n                            <canvas baseChart height=\\\"90\\\" [datasets]=\\\"sensor.pitchChart\\\" [labels]=\\\"lineChartLabels\\\" [options]=\\\"lineChartOptions\\\" [colors]=\\\"pitchChartColor\\\" [legend]=\\\"lineChartLegend\\\" [chartType]=\\\"lineChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n                            </canvas>\\n                            <br>\\n                            <div class=\\\"label-graph\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col col-sm-6\\\" style=\\\"text-align:right\\\">\\n                                        <b>Heading</b>: <span [style.color]=\\\"getStyle(sensor, 'heading')\\\">{{sensor.headingChart[0].data[0] || '0'}}°</span>\\n                                    </div>\\n                                    <div class=\\\"col col-sm-6\\\" style=\\\"text-align:left\\\">\\n                                        <b>Acceleration</b>: <span>{{calculateAcceleration(sensor.headingChart[0].data[0], sensor.headingChart[0].data[9])}}°/s<sup>2</sup></span>\\n                                    </div>\\n                                </div>                                 \\n                            </div>\\n                            <canvas baseChart height=\\\"90\\\" [datasets]=\\\"sensor.headingChart\\\" [labels]=\\\"lineChartLabels\\\" [options]=\\\"lineChartOptions\\\" [colors]=\\\"headingChartColor\\\" [legend]=\\\"lineChartLegend\\\" [chartType]=\\\"lineChartType\\\" (chartHover)=\\\"chartHovered($event)\\\" (chartClick)=\\\"chartClicked($event)\\\">\\n                            </canvas>                                                                                      \\n                        </div>\\n                        <div class=\\\"col col-sm-6\\\" style=\\\"text-align:center;\\\">\\n                            <geometry-cube texture=\\\"/assets/textures/crate.gif\\\"\\n                            [size]=\\\"200\\\"\\n                            [rotationSpeedX]=\\\"sensor.rollChart[0]?.data[0]\\\"\\n                            [rotationSpeedY]=\\\"sensor.headingChart[0]?.data[0]\\\"\\n                            [rotationSpeedZ]=\\\"sensor.pitchChart[0]?.data[0]\\\"\\n                            [cameraZ]=\\\"400\\\"\\n                            [fieldOfView]=\\\"70\\\"\\n                            [nearClipping]=\\\"1\\\"\\n                            [farClipping]=\\\"1000\\\"></geometry-cube>\\n                        </div>                    \\n                    </div>                    \\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- modal templates -->\\n\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Add Sensor Widget</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <form role=\\\"form\\\">\\n            <fieldset class=\\\"form-group\\\">\\n                <label>ID</label>\\n                <input class=\\\"form-control\\\" placeholder=\\\"ex: 1234-5678-90\\\" [(ngModel)]=\\\"newWidget.sensorId\\\" name=\\\"sensorId\\\" >\\n            </fieldset>\\n            <fieldset class=\\\"form-group\\\">\\n                <label>Name</label>\\n                <input class=\\\"form-control\\\" placeholder=\\\"ex: Sensor A\\\" [(ngModel)]=\\\"newWidget.name\\\" name=\\\"name\\\" >\\n            </fieldset>                            \\n        </form>                                \\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createWidget(); c('Close click')\\\">Save</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Cancel</button>\\n    </div>\\n</ng-template>\\n\\n<ng-template #editWidgetContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Widget Settings</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <h5>Treshold Indicator Values</h5>\\n        <br>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col col-sm-6\\\">\\n                <form role=\\\"form\\\">\\n                    <fieldset class=\\\"form-group\\\">\\n                        <label>Roll (min)</label>\\n                        <input type=\\\"number\\\" [(ngModel)]=\\\"currentWidgetSetting.rollMin\\\" name=\\\"rollMin\\\" max=\\\"180\\\" min=\\\"-180\\\" class=\\\"form-control\\\" placeholder=\\\"0\\\">\\n                    </fieldset>\\n                    <fieldset class=\\\"form-group\\\">\\n                        <label>Pitch (min)</label>\\n                        <input type=\\\"number\\\" [(ngModel)]=\\\"currentWidgetSetting.pitchMin\\\" name=\\\"pitchMin\\\" max=\\\"180\\\" min=\\\"-180\\\" class=\\\"form-control\\\" placeholder=\\\"0\\\">\\n                    </fieldset>                            \\n                </form> \\n            </div>  \\n            <div class=\\\"col col-sm-6\\\">\\n                <form role=\\\"form\\\">\\n                    <fieldset class=\\\"form-group\\\">\\n                        <label>Roll (max)</label>\\n                        <input type=\\\"number\\\" [(ngModel)]=\\\"currentWidgetSetting.rollMax\\\" name=\\\"rollMax\\\" max=\\\"180\\\" min=\\\"-180\\\" class=\\\"form-control\\\" placeholder=\\\"0\\\">\\n                    </fieldset>\\n                    <fieldset class=\\\"form-group\\\">\\n                        <label>Pitch (max)</label>\\n                        <input type=\\\"number\\\" [(ngModel)]=\\\"currentWidgetSetting.pitchMax\\\" name=\\\"pitchMax\\\" max=\\\"180\\\" min=\\\"-180\\\" class=\\\"form-control\\\" placeholder=\\\"0\\\">\\n                    </fieldset>                            \\n                </form> \\n            </div>  \\n        </div>\\n                               \\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"updateWidgetSetting(); c('Close click')\\\">Save</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"updateWidgetSetting(); c('Close click')\\\">Cancel</button>\\n    </div>\\n</ng-template> \\n\\n<ng-template #deleteWidgetContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Delete Widget</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <p>Do you want to continue?</p>                               \\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteWidget(); c('Close click')\\\">Delete</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Cancel</button>\\n    </div>\\n</ng-template>\\n\\n<ng-template #rebootWidgetContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Reboot Module</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <p>Do you want to continue?</p>                               \\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"systemExecute('reboot'); c('Close click')\\\">Reboot</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\">Cancel</button>\\n    </div>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dash/dash.component.html\n// module id = ../../../../../src/app/layout/dash/dash.component.html\n// module chunks = 2","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".add-widget-container {\\n  text-align: right;\\n  margin-bottom: 30px; }\\n\\n.label-graph {\\n  text-align: center; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dash/dash.component.scss\n// module id = ../../../../../src/app/layout/dash/dash.component.scss\n// module chunks = 2","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { SensorStreamService } from './sensorStream.service';\nimport { WidgetService } from '../../services/widget.service';\nimport { HelperService } from '../../services/helper.service';\nimport { WidgetSettingService } from '../../services/widgetSetting.service';\nimport { WidgetModel } from './widget-model';\nimport { SensorDirectory } from './sensor-directory-model';\n\n@Component({\n    selector: 'app-charts',\n    templateUrl: './dash.component.html',\n    styleUrls: ['./dash.component.scss'],\n    animations: [routerTransition()],\n    providers: [SensorStreamService, WidgetService, WidgetSettingService, HelperService]\n})\n\nexport class DashComponent implements OnInit {\n\n    public messages = [];\n    private connection;\n    public message;\n\n    constructor(\n        private modalService: NgbModal,\n        private _sensorStreamService: SensorStreamService,\n        private _widgetService: WidgetService,\n        private _helperService: HelperService,\n        private _widgetSettingService: WidgetSettingService\n    ){}\n\n    private pitchTmpData:Array<number> = [0,0,0,0,0,0,0,0,0,0];\n    private rollTmpData:Array<number> = [0,0,0,0,0,0,0,0,0,0];\n    private headingTmpData:Array<number> = [0,0,0,0,0,0,0,0,0,0];\n\n    private prevBatteryResult:any;\n\n    private currentWidgetId:string;\n    private currentWidgeSettingtId:string;\n    private widgetSensorDirectory:SensorDirectory;\n\n    public yLabelPlaceholderLimit:number = 60000;\n    public selectedInterval:any = this.yLabelPlaceholderLimit;\n\n    public currentWidgetSetting:any = {\n        widgetId: '',\n        rollMin: -90,\n        rollMax: 90,\n        pitchMin: -90,\n        pitchMax: 90,\n        isDegrees: true        \n    };\n    public newWidget:any = {\n        sensorId: '',\n        dashboardId: '0',\n        type: 'motion-sensor',\n        description: 'default'\n    }\n\n    public newWidgetSetting:any = {\n        widgetId: '',\n        rollMin: -90,\n        rollMax: 90,\n        pitchMin: -90,\n        pitchMax: 90,\n        isDegrees: true,\n    }\n\n    public sensorWidgets:Array<WidgetModel> = [];    \n\n    private intervalProcess:any = {};\n\n    public lineChartLabels: Array<any> = ['0', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\n\n    public lineChartOptions: any = {\n        responsive: true,\n        animation: {\n            duration: 100\n        },\n        legend: {\n            display: false\n        },        \n        scales: {\n            yAxes: [{\n                ticks: {\n                    suggestedMin: -10,\n                    suggestedMax: 10\n                },\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Degrees'\n                }                \n            }],\n            xAxes: [{\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Time (ms)'\n                }                \n            }]\n        }        \n    };\n\n    public pitchChartColor: Array<any> = [\n        { // green\n            backgroundColor: '#2ecc71',\n            borderColor: '#2ecc71',\n            pointBackgroundColor: 'transparent',\n            pointBorderColor: 'transparent',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        }\n    ];\n\n    public rollChartColor: Array<any> = [\n        { // blue\n            backgroundColor: '#3498db',\n            borderColor: '#3498db',\n            pointBackgroundColor: 'transparent',\n            pointBorderColor: 'transparent',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        }\n    ];   \n    \n    public headingChartColor: Array<any> = [\n        { // blue\n            backgroundColor: '#f0ad4e',\n            borderColor: '#f0ad4e',\n            pointBackgroundColor: 'transparent',\n            pointBorderColor: 'transparent',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        }\n    ];    \n\n    public lineChartLegend: boolean = true;\n    public lineChartType: string = 'line';\n\n    public closeResult: string;\n\n    public open(content, id) {\n        this.currentWidgetId = id;\n\n        this._widgetSettingService.getByWidgetId(id)\n        .subscribe(data => {\n            this.currentWidgeSettingtId = data.data._id;\n            this.currentWidgetSetting = data.data;\n        }); \n\n        this.modalService.open(content).result.then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n\n    private generateYLabel(limit:number, isLabel:boolean):any{\n        var x = [];\n\n        for(var i=0;i < limit; i++){\n            if((i % 100) === 0)\n            {\n                if(isLabel){\n                    x.push(i);    \n                }else{\n                    x.push(0);\n                }\n            }\n        }\n        return x;\n    }\n\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return  `with: ${reason}`;\n        }\n    }    \n\n    private radiansToDegrees(num: number){\n        var result = num * (180 / Math.PI);\n        result = parseFloat(result.toFixed(2));\n\n        return result;\n    }\n\n\tprivate fetchWidgets():void{\n        this._widgetService.getAll()\n        .subscribe(data => {\n            let widgets = data.data;\n            let output = [];\n            var tmp = {};         \n\n            widgets.forEach((widget, idx) => {\n                this._widgetSettingService.getByWidgetId(widget._id)\n                .subscribe(widgetSetting => {\n                    widget.pitchChart = [\n                        { data: [-0.1, 0.1, -0.1, 0.1, -0.1, 0, 0.1, -0.1, 0.1, 0.1], label: 'Pitch', fill:false}\n                    ];\n                    widget.rollChart = [\n                        { data: [0.1, -0.1, 0.1, -0.1, 0.1, 0, -0.1, 0.1, -0.1, 0.1], label: 'Roll', fill:false}\n                    ];\n                    widget.headingChart = [\n                        { data: [0.1, -0.1, 0.1, -0.1, 0.1, 0, -0.1, 0.1, -0.1, 0.1], label: 'Roll', fill:false}\n                    ];                \n\n                    widget.pitchMax = widgetSetting.data.pitchMax;\n                    widget.pitchMin = widgetSetting.data.pitchMin;\n                    widget.rollMax = widgetSetting.data.rollMax;\n                    widget.rollMin = widgetSetting.data.rollMin;\n\n                    output.push(widget);\n\n                    tmp[widget.sensorId] = idx;\n\n                    if(idx === (widgets.length - 1)){\n                        this.widgetSensorDirectory = tmp;\n                        this.sensorWidgets = output;\n                        this.iniateWebSockets();\n                    };\n                });                \n            });\n\n\n        });\n    }  \n\n    public onIntervalSelect(newValue) {\n        this.yLabelPlaceholderLimit = newValue;\n        this.connection.unsubscribe();\n        this.fetchWidgets();\n        this.lineChartLabels = this.generateYLabel(this.yLabelPlaceholderLimit, true);        \n    }    \n\n    public createWidget():void{\n\t\tthis._widgetService.create(this.newWidget)\n\t\t.subscribe(data => {\n            this.newWidgetSetting.widgetId = data.data._id;\n            this._widgetSettingService.create(this.newWidgetSetting)\n            .subscribe(data => {\n                this.fetchWidgets();\n                this.clearAddSensorWidgetForm()\n            });            \n\t\t});          \n    }\n\n    public fetchWidgetSetting():void{\n        this._widgetSettingService.getByWidgetId('123')\n        .subscribe(data => {\n            this.fetchWidgets();\n        });\n    }  \n\n    public updateWidgetSetting():void{\n        this._widgetSettingService.update(this.currentWidgetSetting)\n        .subscribe(data => {\n            this.fetchWidgets();\n        });        \n    }    \n\n    public deleteWidget():void{\n        var widgetId = this.currentWidgetId;\n        var widgetSettingId = this.currentWidgeSettingtId;\n\n\t\tthis._widgetService.delete(widgetId)\n\t\t.subscribe(data => {\n            this.fetchWidgets();\n            this._widgetSettingService.delete(widgetSettingId)\n            .subscribe(data => {\n                this.fetchWidgets();\n            });            \n\t\t});    \n    }\n\n    public systemExecute(type) {\n        console.log(type);\n        this._sensorStreamService.sendMessage('reboot'); \n    }\n\n    private clearAddSensorWidgetForm():void{\n        this.newWidget =  {\n            sensorId: '',\n            dashboardId: '0',\n            type: 'motion-sensor',\n            description: 'default'\n        }        \n    }\n\n    private iniateWebSockets():void{\n        if(this.connection){\n            this.connection.unsubscribe();\n        } \n\n        var pitchTmpData2 = this.generateYLabel(this.yLabelPlaceholderLimit, false);\n        var rollTmpData2 = this.generateYLabel(this.yLabelPlaceholderLimit, false);\n        var headingTmpData2 = this.generateYLabel(this.yLabelPlaceholderLimit, false);\n\n        this.connection = this._sensorStreamService.getMessages().subscribe(message => {\n            var tmp = message.toString();\n            var buffer = tmp.split(',');\n            var sensorId = buffer[0].toString();\n\n            var battery = parseFloat(buffer[4]) || 0;\n            var roll = parseFloat(buffer[3]);\n            var pitch = parseFloat(buffer[2]);\n            var heading = parseFloat(buffer[1]);\n\n            pitchTmpData2.unshift(pitch);\n            pitchTmpData2.pop();\n\n            rollTmpData2.unshift(roll);\n            rollTmpData2.pop();\n\n            headingTmpData2.unshift(heading);\n            headingTmpData2.pop();\n\n            this.cleanSensorWidgets();\n\n            this.sensorWidgets[this.widgetSensorDirectory[sensorId]].battery = this.calculateBattery(battery);\n\n            var pitchClone = JSON.parse(JSON.stringify(this.sensorWidgets[this.widgetSensorDirectory[sensorId]].pitchChart));\n            pitchClone[0].data = pitchTmpData2;\n            this.sensorWidgets[this.widgetSensorDirectory[sensorId]].pitchChart = pitchClone;\n            \n            var rollClone = JSON.parse(JSON.stringify(this.sensorWidgets[this.widgetSensorDirectory[sensorId]].rollChart));\n            rollClone[0].data = rollTmpData2;\n            this.sensorWidgets[this.widgetSensorDirectory[sensorId]].rollChart = rollClone;    \n\n            const headingClone = JSON.parse(JSON.stringify(this.sensorWidgets[this.widgetSensorDirectory[sensorId]].headingChart));\n            headingClone[0].data = headingTmpData2;\n            this.sensorWidgets[this.widgetSensorDirectory[sensorId]].headingChart = headingClone;               \n        });        \n    }\n\n    public calculateAcceleration(final:any, initial:any):any{\n        var result;\n\n        result = ((final - initial)/1).toFixed(2);\n        result = Math.abs(result);\n\n        return result;\n    }\n\n    private calculateBattery(battery:any){\n        var result;\n        var maxVoltage = 12;\n        var minVoltage = 10;\n\n        if(battery <= maxVoltage){\n            result = ( (battery - minVoltage) / ( maxVoltage - minVoltage) ) * 100;\n            result = Math.floor(result);\n        }else{\n            result = 100;\n        }\n\n        return result;\n    }\n\n    private cleanSensorWidgets(){\n        this.sensorWidgets[0].pitchChart[0].data = [0,0,0,0,0,0,0,0,0,0];\n        this.sensorWidgets[0].rollChart[0].data = [0,0,0,0,0,0,0,0,0,0];\n        this.sensorWidgets[0].headingChart[0].data = [0,0,0,0,0,0,0,0,0,0];\n        if(this.sensorWidgets[1]){\n            this.sensorWidgets[1].pitchChart[0].data = [0,0,0,0,0,0,0,0,0,0];\n            this.sensorWidgets[1].rollChart[0].data = [0,0,0,0,0,0,0,0,0,0];   \n            this.sensorWidgets[1].headingChart[0].data = [0,0,0,0,0,0,0,0,0,0];    \n        }    \n    }    \n\n    public parseData(data:any):any{\n        let output = 0;\n\n        if(data[0].data[0]){\n            output = data[0].data[0];            \n        }\n\n        return output;\n    }\n\n    public getBatteryStyle(data:any){\n        let color;\n\n        if(data > 50 && data <= 100){\n            color = 'green';\n        }else if(data > 25 && data <= 50){\n            color = 'orange';\n        }else{\n            color = 'red';\n        } \n\n        return color;\n    }\n\n    public getBatteryIndicator(data:any){\n        let level = 'fa fa-battery-1';\n\n        if(data > 90 && data <= 100){\n            level = 'fa fa-battery-4';\n        }else if(data > 60 && data <= 89){\n            level = 'fa fa-battery-3';\n        }else if(data > 30 && data <= 59){\n            level = 'fa fa-battery-2';\n        }else if(data > 5 && data <= 29){\n            level = 'fa fa-battery-1';\n        }else{\n            level = 'fa fa-battery-0';\n        }         \n\n        return level;\n    }    \n\n    public getStyle(data:any, type:string) {\n        let color = \"\";\n        let currentValue = data[type + 'Chart'][0].data[0];\n        let threshold = {\n            pitchMax : data.pitchMax,\n            pitchMin : data.pitchMin,\n            rollMax : data.rollMax,\n            rollMin : data.rollMin\n        }\n\n        if(currentValue >= threshold[type + 'Max'] || currentValue <= threshold[type + 'Min']){\n            color = \"red\";\n        }else if(currentValue >= (threshold[type + 'Max'] - (threshold[type + 'Max'] * .20)) || currentValue <= (threshold[type + 'Min'] - threshold[type + 'Min'] * .20)){\n            color = \"orange\";\n        }\n\n        return color;\n    }\n    \n    private syncTime(){\n        var data = new Date();\n        var timeData;\n        timeData = data.toString();\n        data = timeData.split(' ');\n        timeData = data[0] + ' ' + data[1] + ' ' + data[2] + ' ' + data[4] + ' UTC ' + data[3];        \n\n        console.log(timeData);\n\n        this._helperService.setTime(timeData)\n        .subscribe(data => {\n            console.log(data);\n        });        \n    }\n\n    ngOnInit() {        \n        this.fetchWidgets();\n        this.lineChartLabels = this.generateYLabel(this.yLabelPlaceholderLimit, true);\n    }\n\n\tngOnDestroy() {\n\t\tif (this.intervalProcess) {\n\t\t\tclearInterval(this.intervalProcess);\n        }\n\n        if(this.connection){\n            this.connection.unsubscribe();\n        }        \n\t}\n    \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dash/dash.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChartsModule as Ng2Charts } from 'ng2-charts';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { DashRoutingModule } from './dash-routing.module';\nimport { DashComponent } from './dash.component';\nimport { PageHeaderModule } from '../../shared';\nimport { ThreeModelComponent } from '../3DModel/3DModel.component';\n\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        Ng2Charts,\n        NgbModule.forRoot(),\n        DashRoutingModule,\n        PageHeaderModule,\n        FormsModule\n    ],\n    declarations: [DashComponent, ThreeModelComponent]\n})\nexport class DashModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dash/dash.module.ts","import { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport * as io from 'socket.io-client';\n\nexport class SensorStreamService {\n  private url = 'http://172.24.1.1:4444';\n  private socket;\n  \n  sendMessage(message){\n    this.socket.emit('hardware-command', message);    \n    return true;\n  }\n  \n  getMessages() {\n    let observable = new Observable(observer => {\n      this.socket = io(this.url);\n      this.socket.on('fromPublicServer', (data) => {\n        observer.next(data);    \n      });\n      return () => {\n        this.socket.disconnect();\n      };  \n    })     \n    return observable;\n  }  \n}\n\n\n// WEBPACK FOOTER //\n// /Users/vynci/firstOcean/frontend/SB-Admin-BS4-Angular-4/src/app/layout/dash/sensorStream.service.ts"],"sourceRoot":"webpack:///"}